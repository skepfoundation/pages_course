[
  {
    "objectID": "lessons/lesson_03.html",
    "href": "lessons/lesson_03.html",
    "title": "Lesson 03: Writing in Markdown",
    "section": "",
    "text": "You will learn the basics of Markdown, a lightweight markup language that is widely used for formatting plain text. Markdown is commonly used for writing content on platforms like GitHub, where it is essential for creating README files, documentation, and more."
  },
  {
    "objectID": "lessons/lesson_03.html#overview",
    "href": "lessons/lesson_03.html#overview",
    "title": "Lesson 03: Writing in Markdown",
    "section": "",
    "text": "You will learn the basics of Markdown, a lightweight markup language that is widely used for formatting plain text. Markdown is commonly used for writing content on platforms like GitHub, where it is essential for creating README files, documentation, and more."
  },
  {
    "objectID": "lessons/lesson_03.html#learning-objectives",
    "href": "lessons/lesson_03.html#learning-objectives",
    "title": "Lesson 03: Writing in Markdown",
    "section": "Learning Objectives",
    "text": "Learning Objectives\n\nStudents will be able to format plain text using Markdown syntax.\nStudents will be able to write README files using Markdown in GitHub repositories."
  },
  {
    "objectID": "lessons/lesson_03.html#lesson",
    "href": "lessons/lesson_03.html#lesson",
    "title": "Lesson 03: Writing in Markdown",
    "section": "Lesson",
    "text": "Lesson\n\nWhy Markdown Matters ?\n\nMarkdown can be used for basically everything. It’s used to create websites, documents, notes, presentations and technical documentation.\nMarkdown is as beginner-friendly as it’s powerful, portable and platform independent. It can be created on any device running any operating system, using virtually any application.\nMarkdown is everywhere. It’s supported on GitHub, and lots of desktop and web-based applications.\nMarkdown is future proof. Even if the application you’re using stops working at some point in the future, you’ll still be able to read your Markdown-formatted text using a text editing application. This is an important consideration when it comes to milestone documents that need to be preserved indefinitely.\n\nIn short, Markdown is a handy, versatile text-formatting tool that you can use to create websites and other textbased documents, which you’ll be using throughout your data science journey. Knowing how to use it will prove essential as you kickstart your journey.\n\n\nEmphasizing text in Markdown\n\nIn Markdown, the use of asterisks (*) or underscores (_) allows you to emphasize text by making it either italic or bold.\nTo make text italic, wrap it with a single asterisk or underscore on both sides: *italic* or _italic_.\nFor bold text, wrap it with double asterisks or underscores: **bold** or __bold__.\n\n\n\nHeadings in Markdown\n\nHeadings are created using hash (#) symbols. The number of hash symbols determines the level of the heading, with more hash symbols indicating a lower-level heading.\n# Heading 1: This is a top-level heading. It will be rendered as a large, bold heading.\n## Heading 2: This is a second-level heading. It is slightly smaller and less prominent than Heading 1.\n### Heading 3: This is a third-level heading. It is smaller than Heading 2 and is typically used for subsections or less important headings.\n\n\n\nLists in Markdown\n\nYou can create both unordered lists (bullet points) and ordered lists (numbered items)\n\n\nUnordered list\n- Item 1\n- Item 2\n\n\nOrdered list\n1. Ordered Item 1\n2. Ordered Item 2\n\n\n\nCode blocks in Markdown\n\nTo indicate code blocks, use three backticks before and after the block of code. As such: ```python \"insert python code\" ```\n\nYou can do this with any coding language. The output will look like this:\n\nprint(\"Hello World\")\n\n\nOther common rules\n\nHorizontal Rule\n\nYou can create a horizontal rule by using three consecutive hyphens (—) or three consecutive asterisks (***).\n\n--- or ***\n\n\nLinks\n\nTo create a link, enclose the link text in square brackets and then follow it immediately with the URL in parentheses. As such: [link text](https://www.example.com)\n\nThe rendered output looks like this: My example link is example\n\n\nImages\n\nTo add an image, add an exclamation mark (!), followed by alt text in brackets, and the path or URL to the image asset in parentheses. You can optionally add a title in quotation marks after the path or URL. As such: ![alt text](/path/to/image.jpg)\n\nThe rendered output looks like this:\n\n\n\nA River"
  },
  {
    "objectID": "lessons/lesson_03.html#practice-activity",
    "href": "lessons/lesson_03.html#practice-activity",
    "title": "Lesson 03: Writing in Markdown",
    "section": "Practice Activity",
    "text": "Practice Activity\n\nGitHub Profile Setup:\n\nIf you don’t have a GitHub account, sign up for one here. Refer to Lesson 1 guide.\nCreate a new repository with the name “Markdown Practice”.\nAdd a short description and initialize it with a README.\n\n\n\nMarkdown README:\n\nEdit the README file in your repository using the GitHub online editor.\n\n\nUse Markdown to add the following elements:\n\nHeadings (at least two levels).\nEmphasis (italic and bold text) the text “Hello World”.\nLists (both ordered and unordered). (e.g., list of your favourite fruits)\nLinks to external resources (e.g., a link to the GitHub).\nAn image (you can use the GitHub logo).\nA code block with a simple code snippet (e.g., Hello World in any programming language of your choice ).\nA horizontal rule at the end."
  },
  {
    "objectID": "lessons/lesson_03.html#conclusion",
    "href": "lessons/lesson_03.html#conclusion",
    "title": "Lesson 03: Writing in Markdown",
    "section": "Conclusion",
    "text": "Conclusion\nGood job completing this lesson! By now you should:\n\nHave fundamental knowledge of using Markdown\nHave created a README file using Markdown, with an image, a code block and working links.\n\nIn the next lesson you will learn how to host websites on Github."
  },
  {
    "objectID": "lessons/lesson_03.html#faq",
    "href": "lessons/lesson_03.html#faq",
    "title": "Lesson 03: Writing in Markdown",
    "section": "FAQ",
    "text": "FAQ"
  },
  {
    "objectID": "tasks_overview.html",
    "href": "tasks_overview.html",
    "title": "Course Tasks",
    "section": "",
    "text": "Task 1 - Creating Your First Github Repo\nGit is the world’s most popular version control system and Github is the most popular site for hosting code using git in the cloud. As a version control system, Git helps you keep your coding project files organized by keeping a record of when you edited files and tags them with short notes about what changes were made in the last iteration. This is particularly helpful when you are colaborating on a project with other programmers and need to stay tidy while working on the same files.\nGithub is a free web service for storing your version controlled code in the cloud. It allows you to access your code from anywhere and it provides a handy interface for tracking your code’s changes over time. It also happens to have a handy service for hosting static websites for free on their platform.\nIn this task you will create a github account, create a repository, and clone that repository onto your local machine in Rstudio.\n\nDetails"
  },
  {
    "objectID": "lessons/lesson_template.html",
    "href": "lessons/lesson_template.html",
    "title": "Lesson",
    "section": "",
    "text": "[Replace this text with a paragraph explaining what will be learned in this lesson]"
  },
  {
    "objectID": "lessons/lesson_template.html#overview",
    "href": "lessons/lesson_template.html#overview",
    "title": "Lesson",
    "section": "",
    "text": "[Replace this text with a paragraph explaining what will be learned in this lesson]"
  },
  {
    "objectID": "lessons/lesson_template.html#learning-objectives",
    "href": "lessons/lesson_template.html#learning-objectives",
    "title": "Lesson",
    "section": "Learning Objectives",
    "text": "Learning Objectives\n[write a single bullet point for each thing that a learner will be able to do by the end of the lesson. Traditionally these are written with the sentence starter “Students will be able to…”]\n\nStudents will be able to [set up a github profile]\nStudents will be able to [create new github repos]"
  },
  {
    "objectID": "lessons/lesson_template.html#lesson",
    "href": "lessons/lesson_template.html#lesson",
    "title": "Lesson",
    "section": "Lesson",
    "text": "Lesson\n[Replace this text with the content of the actual lesson]"
  },
  {
    "objectID": "lessons/lesson_template.html#practice-activity",
    "href": "lessons/lesson_template.html#practice-activity",
    "title": "Lesson",
    "section": "Practice Activity",
    "text": "Practice Activity\n[This is where we assign students a task to practice what they have learned. This should largely correlate with the Lesson Objectives from up above.]"
  },
  {
    "objectID": "lessons/lesson_template.html#conclusion",
    "href": "lessons/lesson_template.html#conclusion",
    "title": "Lesson",
    "section": "Conclusion",
    "text": "Conclusion\n[Wrap-up by restating what should have been learned in this lesson. Then tease other lessons.\nexample: You should now have your own github profile and should be equipped to help others make one as well. In the next lesson you will learn how to add a profile page to your profile that shows others what make you unique and what particular skills you have.]"
  },
  {
    "objectID": "lessons/lesson_template.html#faq",
    "href": "lessons/lesson_template.html#faq",
    "title": "Lesson",
    "section": "FAQ",
    "text": "FAQ\n[This is where we will post common questions students have while doing a lesson along with answers to those questions. This list will likely grow as more students take the course and we learn what they struggle with]\n\nWhat is two-factor authentication?\nTwo-factor authentication is when you use an additional tool to sign into your account such as a text message or an authenticator app. Two factor authentication helps provide an extra layer of security when signing in to keep your data safe. The first factor is almost always your password. The second factor is usually something that a hacker is unlikely to have access to like an authenticator app on your cell-phone."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Welcome!",
    "section": "",
    "text": "Introduction\nWelcome to GitHub Pages Training, a course designed to take you from complete beginner to a website creating machine! In this course we will walk through the basics of using Github, R, and Quarto for website development. If you don’t know what any of those are, that is OK. We’ll teach you! Just know this, we will collectively use those tools to develop free websites. Along the way you will pick up the fundamental data science skills used by professionals every day.\n\n\nRequired Experience\nThis course assumes that you have no technical experience with website creation, programming, or using GitHub. It does however assume that you have a basic understanding of how to navigate a computer and its file management system.\nYou will be well served by knowing how to find answers to your questions through a search engine like Google. Many say that the best programmers are really just the best googlers.\nSome excellent websites where people post questions and answers to common programming questions are Stack Overflow and GitHub.\n\n\nRequired Materials\nYou will need access to the following materials to complete this course:\n\nA computer with at least 8GB of RAM\nA stable internet connection\nA discord account with access to our discord server\n\n\n\nCourse Structure\nThis course is designed to allow you to complete learning assignments on your own but with some healthy support from our data science team. We will meet for whole team check-ins once a week virtually through zoom. Additionally, we will have a discord server where you can post questions, pictures of your class projects, and assist other learners in our community.\nYou are expected to interact on that discord server over the duration of the course both for your benefit and the benefit of your peers. It’s also a great place to meet like-minded individuals and grow your network!\nYou will be assigned a data science mentor who can help you with your assignments. Discord will be your primary tool for interacting.\n\n\nCourse Outcomes\n\nWhat you will know by the end\nBy the end of this course you should know how to build a basic, static website using R and hosted for free on Github. You will know how to customize your website and how to add cool things like embedded pictures and videos, interactive charts, and direct links to social platforms like facebook and twitter.\n\nYou will know how to use Github for version control of future coding projects.\nYou will know how to use the R programming language to generate plots and manage data from a variety of sources.\nYou will know how to use Quarto to publish professional reports including websites.\n\n\n\nWhat you will not know by the end\nWhile we hope you feel you can create a custom website from scratch by the end of this course, there will still be some things you won’t be able to do by the end.\n\nYou won’t be able to create a dynamic website. A dynamic website is where he contents of the site react differently to each individual user on the site. (Like facebook, google, or youtube)\nYou won’t known the ins and outs of data science skills like data wrangling or machine learning. (These are saved for future courses)\n\n\n\n\nConclusion\nWe truly hope you enjoy this course and that it serves you on your data science journey. This course is designed to teach you the basic skills you will need to succeed as a data scientist. We do this through a lens of learning how to create websites but with the primary intent of giving you transferable skills to succeed in the world of data science."
  },
  {
    "objectID": "lessons/lesson_01.html",
    "href": "lessons/lesson_01.html",
    "title": "Lesson 01: Creating a Github Account",
    "section": "",
    "text": "This lesson will go over the steps necessary to create a GitHub account"
  },
  {
    "objectID": "lessons/lesson_01.html#overview",
    "href": "lessons/lesson_01.html#overview",
    "title": "Lesson 01: Creating a Github Account",
    "section": "",
    "text": "This lesson will go over the steps necessary to create a GitHub account"
  },
  {
    "objectID": "lessons/lesson_01.html#learning-objectives",
    "href": "lessons/lesson_01.html#learning-objectives",
    "title": "Lesson 01: Creating a Github Account",
    "section": "Learning Objectives",
    "text": "Learning Objectives\n\nStudents will be able to set up a github profile."
  },
  {
    "objectID": "lessons/lesson_01.html#lesson",
    "href": "lessons/lesson_01.html#lesson",
    "title": "Lesson 01: Creating a Github Account",
    "section": "Lesson",
    "text": "Lesson\n\nStep 01: Find Github\n\nNavigate to Github.com.\nClick on the right side of the pink arrow to enter your email address.\n\n\n\nStep 02: Enter Email address, Password, and Username\n\nEnter a valid email address that you have immediate access to. Double check to make sure the email address is valid and that you have access to it.\nIf the continue button turns green, tap it.\nA new section will appear prompting you to input a password. Make sure to follow the password guidelines that will appear at the bottom of the password input area.\nAgain, click on the green continue button.\nA new section will appear prompting you to input a username. Follow the username guidelines that will appear at the bottom of the username input area.\nClick on the green continue button.\nA prompt will appear asking if you want to receive annoucements via email. If you are okay with receiving product email and announcements from Github, enter the letter y, if not, enter the letter n in the input area provided.\nClick on the green continue button.\n\n\n\nStep 03: Verifying your account\n\nA new section will drop down asking you to verify your account. Click on the word Verify. It should turn green when you hover over it.\nThe verification challenge would be a picture of a pointing hand on the left, and a picture of an animal on the right. The challenge is to use the ⬅ and ➡ buttons which are below the picture of an animal to position the animal to face in the direction the hand is pointing.\nYou may have one or two of a similar challenge.\nWhen you are done with the challenge a check mark ✅ will appear.\nNow click on the green create account button that will be at the bottom of the screen.\nA code will be sent to the email address you entered previously.\nOpen you email account and refresh your inbox. You should see a message from Github.\nIf after a while, you still do not see an email from Github, go back to the webpage and tap the link below the Enter code section. The link will be named Resend the code. This will prompt Github to send a new message to your email.\nWhen you receive the email, open it and take note of the numbers there.\nReturn to the Github webpage and input the numbers into the boxes provided.\nIf you have entered the numbers correctly, a new webpage will appear.\n\n\n\nStep 04: Final Setup\n\nYou will be asked two questions\n\nHow many team members will be working with you?\n\nFor this question choose the option 2-5.\n\nAre you a student or teacher?\n\nFor this question choose the option student if you are a student. Choose N/A if you are neither a student nor a teacher.\n\n\nA new webpage will appear asking you some questions. Just click the continue button found at the bottom of the page.\nYou will see a new webpage with two sections, one labelled Free and the other Get Student Benefits.\nFor now, go to the bottom of the page and click Continue for free, even if you are a student. You can get student benefits later.\nWoohoo!! Your Github dashboard should now be open.\n\n\n\nCongratulations 🎉😎, You have successfully created a GitHub Account/Profile!"
  },
  {
    "objectID": "lessons/lesson_01.html#practice-activity",
    "href": "lessons/lesson_01.html#practice-activity",
    "title": "Lesson 01: Creating a Github Account",
    "section": "Practice Activity",
    "text": "Practice Activity\n\nCreate a Github account.\nWhen your dashboard opens, take a screen shot of it.\nPost the screenshot in your group so your classmates and mentors can see."
  },
  {
    "objectID": "lessons/lesson_01.html#conclusion",
    "href": "lessons/lesson_01.html#conclusion",
    "title": "Lesson 01: Creating a Github Account",
    "section": "Conclusion",
    "text": "Conclusion\nYou should now have your own Github account/profile and should be equipped to help others make one as well. In the next lesson you will learn how to add a profile page to your profile that shows others what make you unique and what particular skills you have."
  },
  {
    "objectID": "lessons/lesson_01.html#faq",
    "href": "lessons/lesson_01.html#faq",
    "title": "Lesson 01: Creating a Github Account",
    "section": "FAQ",
    "text": "FAQ\n\nWhat is two-factor authentication?\nTwo-factor authentication is when you use an additional tool to sign into your account such as a text message or an authenticator app. Two factor authentication helps provide an extra layer of security when signing in to keep your data safe. The first factor is almost always your password. The second factor is usually something that a hacker is unlikely to have access to like an authenticator app on your cell-phone.\n\n\nWhat if I fail the picture challenge?\nDon’t stress. Refresh the webpage and try again."
  },
  {
    "objectID": "tasks/task_01.html",
    "href": "tasks/task_01.html",
    "title": "Task 01 - My First GitHub Repo",
    "section": "",
    "text": "Git is the world’s most popular version control system and Github is the most popular site for hosting code using git in the cloud. As a version control system, Git helps you keep your coding project files organized by keeping a record of when you edited files and tags them with short notes about what changes were made in the last iteration. This is particularly helpful when you are colaborating on a project with other programmers and need to stay tidy while working on the same files.\nGithub is a free web service for storing your version controlled code in the cloud. It allows you to access your code from anywhere and it provides a handy interface for tracking your code’s changes over time. It also happens to have a handy service for hosting static websites for free on their platform.\nIn this task you will create a github account, create a repository, and clone that repository onto your local machine in Rstudio."
  },
  {
    "objectID": "tasks/task_01.html#overview",
    "href": "tasks/task_01.html#overview",
    "title": "Task 01 - My First GitHub Repo",
    "section": "",
    "text": "Git is the world’s most popular version control system and Github is the most popular site for hosting code using git in the cloud. As a version control system, Git helps you keep your coding project files organized by keeping a record of when you edited files and tags them with short notes about what changes were made in the last iteration. This is particularly helpful when you are colaborating on a project with other programmers and need to stay tidy while working on the same files.\nGithub is a free web service for storing your version controlled code in the cloud. It allows you to access your code from anywhere and it provides a handy interface for tracking your code’s changes over time. It also happens to have a handy service for hosting static websites for free on their platform.\nIn this task you will create a github account, create a repository, and clone that repository onto your local machine in Rstudio."
  },
  {
    "objectID": "tasks/task_01.html#tasks",
    "href": "tasks/task_01.html#tasks",
    "title": "Task 01 - My First GitHub Repo",
    "section": "Tasks",
    "text": "Tasks\n\nIf you haven’t already, get R, R Studio, and Git installed on your local machine.\n\nHow to Install R\nHow to Install R Studio\nHow to install Git\n\nRegister for a github account at github.com\n\nFill out this spreadsheet when you are done: Spreadsheet\n\nRead this article on what git is and why you should use it: What is Git & Why Should You Use It?\nCreate your first repo by following these steps:"
  },
  {
    "objectID": "tools/r_installation.html",
    "href": "tools/r_installation.html",
    "title": "R Installation",
    "section": "",
    "text": "What is R?\nR is a programming language developed by Ross Ihaka and Robert Gentleman designed for statistical programming. It is primarily focused on data wrangling and visualization.\nAs the phrase “programming language” suggests, R is a language used to instruct a computer to carry out complex commands. Like most any other language you will need to understand its grammar and syntax in order to fluently “speak” it. The more fluent you become in it, the easier it will be for you to communicate your wants and desires to it.\n\n\nInstalling R\n\nGo to cloud.r-project.org\nClick on the download link for your computer system. For example if you are using a windows computer click “Download R for Windows”\nClick on “base”\nClick on the download version for the current version of R. (At time of writing the button says “Download R-4.3.1 for Windows” on a windows computer.) Make sure you know where you save the downloaded file so that you can run the installer.\nNavigate to the downloaded file and run the installer by double clicking. (Usually it is title something like “R-4.3.1-win”) Follow the steps for the installation wizard. It is highly recommended you just keep the recommended installation settings especially if you haven’t done this before.\nR should now be properly installed. We’ll show you how to check it properly in the next tutorial “Installing R Studio”"
  },
  {
    "objectID": "lessons/lesson_03.html#resources",
    "href": "lessons/lesson_03.html#resources",
    "title": "Lesson 03: Writing in Markdown",
    "section": "Resources",
    "text": "Resources\nMarkdown Cheatsheet\nInteractive Markdown Tutorial"
  }
]