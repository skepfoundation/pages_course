---
title: "Lesson 03: Writing in Markdown"
---

## Overview

You will learn the basics of Markdown, a lightweight markup language that is widely used for formatting plain text. Markdown is commonly used for writing content on platforms like GitHub, where it is essential for creating README files, documentation, and more.

## Learning Objectives


-   Students will be able to format plain text using Markdown syntax.

-   Students will be able to write README files using Markdown in GitHub  repositories.

## Lesson

### Why Markdown Matters ?

-   Markdown can be used for basically everything. It's used to create websites, documents, notes, presentations and technical documentation.

-   Markdown is as beginner-friendly as it's powerful, portable and platform independent. It can be created on any device running any operating system, using virtually any application.

-   Markdown is everywhere. It's supported on GitHub, and lots of desktop and web-based applications.

-   Markdown is future proof. Even if the application you’re using stops working at some point in the future, you’ll still be able to read your Markdown-formatted text using a text editing application. This is an important consideration when it comes to milestone documents that need to be preserved indefinitely.

In short, Markdown is a handy, versatile text-formatting tool that you can use to create websites and other textbased documents, which you'll be using throughout your data science journey. Knowing how to use it will prove essential as you kickstart your journey.


### Emphasizing text in Markdown

* In Markdown, the use of asterisks (*) or underscores (_) allows you to emphasize text by making it either *italic* or **bold**.

* To make text italic, wrap it with a single asterisk or underscore on both sides: ```*italic* or _italic_.```

* For bold text, wrap it with double asterisks or underscores: ```**bold** or __bold__.```

### Headings in Markdown 

* Headings are created using hash (#) symbols. The number of hash symbols determines the level of the heading, with more hash symbols indicating a lower-level heading.

* ```# Heading 1```: This is a top-level heading. It will be rendered as a large, bold heading.

* ```## Heading 2```: This is a second-level heading. It is slightly smaller and less prominent than Heading 1.

* ```### Heading 3```: This is a third-level heading. It is smaller than Heading 2 and is typically used for subsections or less important headings.

### Lists in Markdown

* You can create both unordered lists (bullet points) and ordered lists (numbered items)

#### Unordered list
```- Item 1```

```- Item 2```

#### Ordered list

```1. Ordered Item 1```

```2. Ordered Item 2```

### Code blocks in Markdown

* To indicate code blocks, use three backticks before and after the block of code. As such: `` ```python "insert python code" ``` ``

You can do this with any coding language. The output will look like this:


```python 

print("Hello World")

```

### Other common rules 

#### Horizontal Rule
* You can create a horizontal rule by using three consecutive hyphens (---) or three consecutive asterisks (***).

``` --- or *** ```

#### Links
* To create a link, enclose the link text in square brackets and then follow it immediately with the URL in parentheses. As such: ```[link text](https://www.example.com)```

The rendered output looks like this:
My example link is [example](https://www.example.com)



#### Images
* To add an image, add an exclamation mark (!), followed by alt text in brackets, and the path or URL to the image asset in parentheses. You can optionally add a title in quotation marks after the path or URL. As such: ```![alt text](/path/to/image.jpg)```

The rendered output looks like this:

 ![A River](./image/lake-8305673_1280.webp)



## Practice Activity

### GitHub Profile Setup:

* If you don't have a GitHub account, sign up for one [here](https://www.github.com). Refer to Lesson 1 guide.
* Create a new repository with the name "Markdown Practice".
* Add a short description and initialize it with a README.

### Markdown README:

* Edit the README file in your repository using the GitHub online editor.

#### Use Markdown to add the following elements:

* Headings (at least two levels).
* Emphasis (italic and bold text) the text **"Hello World"**.
* Lists (both ordered and unordered). **(e.g., list of your favourite fruits)**
* Links to external resources **(e.g., a link to the GitHub).**
* An image **(you can use the GitHub logo)**.
* A code block with a simple code snippet **(e.g., Hello World in any programming language of your choice )**.
* A horizontal rule at the end.

## Conclusion

Good job completing this lesson! By now you should:

-   Have fundamental knowledge of using Markdown

-   Have created a README file using Markdown, with an image, a code block and working links.

In the next lesson you will learn how to host websites on Github.


## FAQ

###

## Resources

[Markdown Cheatsheet](https://www.markdownguide.org/cheat-sheet/)

[Interactive Markdown Tutorial](https://www.markdowntutorial.com/lesson/1/)
